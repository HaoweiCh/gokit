// Code generated by protoc-gen-go. DO NOT EDIT.
// source: struct.proto

package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// UserManager相关///////////////////////////////////////////////////////
type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=Company,proto3" json:"Company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

type GetUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{2}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(dst, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetUserResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Company              string   `protobuf:"bytes,3,opt,name=Company,proto3" json:"Company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{3}
}
func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (dst *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(dst, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetUserResponse) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

type AddUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=Company,proto3" json:"Company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{4}
}
func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (dst *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(dst, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddUserRequest) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

type DispatchRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Company              string   `protobuf:"bytes,2,opt,name=Company,proto3" json:"Company,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DispatchRequest) Reset()         { *m = DispatchRequest{} }
func (m *DispatchRequest) String() string { return proto.CompactTextString(m) }
func (*DispatchRequest) ProtoMessage()    {}
func (*DispatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{5}
}
func (m *DispatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DispatchRequest.Unmarshal(m, b)
}
func (m *DispatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DispatchRequest.Marshal(b, m, deterministic)
}
func (dst *DispatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DispatchRequest.Merge(dst, src)
}
func (m *DispatchRequest) XXX_Size() int {
	return xxx_messageInfo_DispatchRequest.Size(m)
}
func (m *DispatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DispatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DispatchRequest proto.InternalMessageInfo

func (m *DispatchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DispatchRequest) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

// Department相关///////////////////////////////////////////////////////
type Department struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Users                []*User  `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Department) Reset()         { *m = Department{} }
func (m *Department) String() string { return proto.CompactTextString(m) }
func (*Department) ProtoMessage()    {}
func (*Department) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{6}
}
func (m *Department) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Department.Unmarshal(m, b)
}
func (m *Department) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Department.Marshal(b, m, deterministic)
}
func (dst *Department) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Department.Merge(dst, src)
}
func (m *Department) XXX_Size() int {
	return xxx_messageInfo_Department.Size(m)
}
func (m *Department) XXX_DiscardUnknown() {
	xxx_messageInfo_Department.DiscardUnknown(m)
}

var xxx_messageInfo_Department proto.InternalMessageInfo

func (m *Department) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Department) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type DepartmentList struct {
	List                 []*Department `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DepartmentList) Reset()         { *m = DepartmentList{} }
func (m *DepartmentList) String() string { return proto.CompactTextString(m) }
func (*DepartmentList) ProtoMessage()    {}
func (*DepartmentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_struct_7ce65557ad4187aa, []int{7}
}
func (m *DepartmentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepartmentList.Unmarshal(m, b)
}
func (m *DepartmentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepartmentList.Marshal(b, m, deterministic)
}
func (dst *DepartmentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepartmentList.Merge(dst, src)
}
func (m *DepartmentList) XXX_Size() int {
	return xxx_messageInfo_DepartmentList.Size(m)
}
func (m *DepartmentList) XXX_DiscardUnknown() {
	xxx_messageInfo_DepartmentList.DiscardUnknown(m)
}

var xxx_messageInfo_DepartmentList proto.InternalMessageInfo

func (m *DepartmentList) GetList() []*Department {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "common.Empty")
	proto.RegisterType((*User)(nil), "common.User")
	proto.RegisterType((*GetUserRequest)(nil), "common.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "common.GetUserResponse")
	proto.RegisterType((*AddUserRequest)(nil), "common.AddUserRequest")
	proto.RegisterType((*DispatchRequest)(nil), "common.DispatchRequest")
	proto.RegisterType((*Department)(nil), "common.Department")
	proto.RegisterType((*DepartmentList)(nil), "common.DepartmentList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserManagerServiceClient is the client API for UserManagerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserManagerServiceClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*Empty, error)
	Dispatch(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*Empty, error)
}

type userManagerServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserManagerServiceClient(cc *grpc.ClientConn) UserManagerServiceClient {
	return &userManagerServiceClient{cc}
}

func (c *userManagerServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/common.UserManagerService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagerServiceClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/common.UserManagerService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagerServiceClient) Dispatch(ctx context.Context, in *DispatchRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/common.UserManagerService/Dispatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserManagerServiceServer is the server API for UserManagerService service.
type UserManagerServiceServer interface {
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	AddUser(context.Context, *AddUserRequest) (*Empty, error)
	Dispatch(context.Context, *DispatchRequest) (*Empty, error)
}

func RegisterUserManagerServiceServer(s *grpc.Server, srv UserManagerServiceServer) {
	s.RegisterService(&_UserManagerService_serviceDesc, srv)
}

func _UserManagerService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagerServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.UserManagerService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagerServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagerService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagerServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.UserManagerService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagerServiceServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagerService_Dispatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DispatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagerServiceServer).Dispatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.UserManagerService/Dispatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagerServiceServer).Dispatch(ctx, req.(*DispatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserManagerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.UserManagerService",
	HandlerType: (*UserManagerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserManagerService_GetUser_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserManagerService_AddUser_Handler,
		},
		{
			MethodName: "Dispatch",
			Handler:    _UserManagerService_Dispatch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "struct.proto",
}

// DepartmentManagerServiceClient is the client API for DepartmentManagerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DepartmentManagerServiceClient interface {
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DepartmentList, error)
	Create(ctx context.Context, in *Department, opts ...grpc.CallOption) (*Empty, error)
}

type departmentManagerServiceClient struct {
	cc *grpc.ClientConn
}

func NewDepartmentManagerServiceClient(cc *grpc.ClientConn) DepartmentManagerServiceClient {
	return &departmentManagerServiceClient{cc}
}

func (c *departmentManagerServiceClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DepartmentList, error) {
	out := new(DepartmentList)
	err := c.cc.Invoke(ctx, "/common.DepartmentManagerService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *departmentManagerServiceClient) Create(ctx context.Context, in *Department, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/common.DepartmentManagerService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DepartmentManagerServiceServer is the server API for DepartmentManagerService service.
type DepartmentManagerServiceServer interface {
	List(context.Context, *Empty) (*DepartmentList, error)
	Create(context.Context, *Department) (*Empty, error)
}

func RegisterDepartmentManagerServiceServer(s *grpc.Server, srv DepartmentManagerServiceServer) {
	s.RegisterService(&_DepartmentManagerService_serviceDesc, srv)
}

func _DepartmentManagerService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentManagerServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.DepartmentManagerService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentManagerServiceServer).List(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DepartmentManagerService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Department)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DepartmentManagerServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.DepartmentManagerService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DepartmentManagerServiceServer).Create(ctx, req.(*Department))
	}
	return interceptor(ctx, in, info, handler)
}

var _DepartmentManagerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.DepartmentManagerService",
	HandlerType: (*DepartmentManagerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _DepartmentManagerService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _DepartmentManagerService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "struct.proto",
}

func init() { proto.RegisterFile("struct.proto", fileDescriptor_struct_7ce65557ad4187aa) }

var fileDescriptor_struct_7ce65557ad4187aa = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4a, 0x33, 0x31,
	0x10, 0xc0, 0xd9, 0xfe, 0xdb, 0xef, 0x1b, 0x6b, 0x0b, 0x73, 0xa8, 0xa1, 0xa7, 0x12, 0x44, 0x0a,
	0x62, 0x91, 0xd5, 0x83, 0x78, 0xb0, 0x48, 0x2b, 0x5e, 0xd4, 0x43, 0xc5, 0x07, 0x88, 0xdb, 0x41,
	0x7b, 0xc8, 0x26, 0x26, 0x69, 0xa1, 0x2f, 0xe6, 0xf3, 0xc9, 0xa6, 0xdd, 0x2e, 0xbb, 0x5d, 0x2c,
	0x78, 0xda, 0xcd, 0x64, 0x7e, 0x33, 0x93, 0x5f, 0x02, 0x6d, 0xeb, 0xcc, 0x32, 0x76, 0x23, 0x6d,
	0x94, 0x53, 0xd8, 0x8a, 0x95, 0x94, 0x2a, 0xe1, 0x21, 0x34, 0x1f, 0xa4, 0x76, 0x6b, 0x7e, 0x0d,
	0x8d, 0x37, 0x4b, 0x06, 0x11, 0x1a, 0x2f, 0x42, 0x12, 0x0b, 0x06, 0xc1, 0xf0, 0xff, 0xcc, 0xff,
	0x23, 0x83, 0x70, 0xa2, 0xa4, 0x16, 0xc9, 0x9a, 0xd5, 0x7c, 0x38, 0x5b, 0xf2, 0x53, 0xe8, 0x3c,
	0x92, 0x4b, 0xc1, 0x19, 0x7d, 0x2d, 0xc9, 0xba, 0x2a, 0x9e, 0x8f, 0xa1, 0xbb, 0xcb, 0xb2, 0x5a,
	0x25, 0x96, 0x0e, 0xb5, 0xa9, 0x17, 0xdb, 0xdc, 0x41, 0xe7, 0x7e, 0x3e, 0x3f, 0xd0, 0xe6, 0x97,
	0x31, 0xc7, 0xd0, 0x9d, 0x2e, 0xac, 0x16, 0x2e, 0xfe, 0xfc, 0x5b, 0x81, 0x29, 0xc0, 0x94, 0xb4,
	0x30, 0x4e, 0x52, 0x52, 0xcd, 0x72, 0x68, 0xa6, 0xf3, 0x59, 0x56, 0x1b, 0xd4, 0x87, 0x47, 0x51,
	0x7b, 0xb4, 0x11, 0x3c, 0xf2, 0x43, 0x6f, 0xb6, 0xf8, 0x0d, 0x74, 0xf2, 0x2a, 0x4f, 0x0b, 0xeb,
	0xf0, 0x0c, 0x1a, 0xe9, 0x97, 0x05, 0x1e, 0xc2, 0x0c, 0xca, 0xb3, 0x66, 0x7e, 0x3f, 0xfa, 0x0e,
	0x00, 0xd3, 0x1a, 0xcf, 0x22, 0x11, 0x1f, 0x64, 0x5e, 0xc9, 0xac, 0x16, 0x31, 0xe1, 0x2d, 0x84,
	0x5b, 0xb1, 0xd8, 0xcb, 0xd8, 0xe2, 0x7d, 0xf4, 0x4f, 0xf6, 0xe2, 0xdb, 0x1b, 0xb8, 0x84, 0x70,
	0xeb, 0x34, 0x67, 0x8b, 0x92, 0xfb, 0xc7, 0x59, 0xdc, 0x3f, 0x11, 0x8c, 0xe0, 0x5f, 0x66, 0x11,
	0x77, 0x65, 0x4b, 0x5e, 0x4b, 0x4c, 0xb4, 0x02, 0x96, 0x1f, 0xa6, 0x34, 0xfd, 0xc5, 0xe6, 0xf0,
	0x58, 0x44, 0xfa, 0xbd, 0x7d, 0x0b, 0x3e, 0xed, 0x1c, 0x5a, 0x13, 0x43, 0xc2, 0x11, 0x56, 0x78,
	0x2a, 0xf5, 0x7d, 0x6f, 0xf9, 0x67, 0x7e, 0xf5, 0x13, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x82, 0xb6,
	0xab, 0xf6, 0x02, 0x00, 0x00,
}
